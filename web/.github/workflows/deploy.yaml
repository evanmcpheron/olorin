name: Deploy

on:
    push:
        branches:
            - main

jobs:
    semantic-release:
        if: "!contains(github.event.head_commit.message, '[skip ci]')"

        name: Semantic Release
        runs-on: ubuntu-latest
        permissions:
            contents: write
        outputs:
            new_release_version: ${{ steps.tag.outputs.new_release_version }}
            previous_release_version: ${{ steps.previous_tag.outputs.tag }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            - uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Save Previous Tag
              id: previous_tag
              uses: 'WyriHaximus/github-action-get-previous-tag@v1'

            - name: Prepare prerelease semantic
              if: github.ref != 'refs/heads/main'
              run: mv .releaserc.prerelease.yaml .releaserc.yaml

            - name: Semantic Release
              if: github.event.head_commit.message != ${{ format('chore{0}release{1}{2} {3} [skip ci]', '(', ')', ':', steps.previous_tag.outputs.tag) }}
              uses: cycjimmy/semantic-release-action@v2
              id: semantic
              with:
                  semantic_version: 17
                  extra_plugins: |
                      @semantic-release/changelog@5
                      @semantic-release/exec@5
                      @semantic-release/git@9
              env:
                  GITHUB_TOKEN: ${{ secrets.PAT }}

            - name: Store New Tag
              if: steps.semantic.outputs.new_release_published == 'true'
              id: tag
              run: |
                  echo 'new_release_version=${{steps.semantic.outputs.new_release_version}}' >> $GITHUB_OUTPUT

    update-versions:
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        needs: [semantic-release]
        name: Update Version Files
        runs-on: ubuntu-latest
        permissions:
            contents: write

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            - uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: output
              run: |
                  echo '${{toJSON(needs.semantic-release.outputs.new_release_version)}}'

            - name: Create branch
              run: |
                  git checkout -b chore-${{ needs.semantic-release.outputs.new_release_version }}

            - name: Update file versions
              uses: jaywcjlove/github-action-package@main
              with:
                  path: ./package.json
                  data: |
                      {
                        "version": "${{ needs.semantic-release.outputs.new_release_version }}"
                      }

            - name: Commit files
              run: |
                  git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git config --local user.name "github-actions[bot]"
                  git config pull.rebase true
                  git add .
                  git commit -m "${{format('chore{0}release{1}{2} {3} [skip ci]', '(', ')', ':', needs.semantic-release.outputs.new_release_version )}}"

            - name: Push changes
              if: github.event.head_commit.message != ${{format('chore{0}release{1}{2} {3} [skip ci]', '(', ')', ':', needs.semantic-release.outputs.new_release_version )}}
              uses: ad-m/github-push-action@master
              with:
                  github_token: ${{ secrets.PAT }}
                  branch: 'chore-${{ needs.semantic-release.outputs.new_release_version }}'

            - name: Create PR
              id: pr
              env:
                  GH_TOKEN: ${{ secrets.PAT }}
              uses: devops-infra/action-pull-request@v0.5.5
              with:
                  github_token: ${{ secrets.PAT }}
                  commit-message: ${{format('chore{0}release{1}{2} {3} [skip ci]', '(', ')', ':', needs.semantic-release.outputs.new_release_version )}}
                  title: ${{format('chore{0}release{1}{2} {3} [skip ci]', '(', ')', ':', needs.semantic-release.outputs.new_release_version )}}
                  source_branch: 'chore-${{ needs.semantic-release.outputs.new_release_version }}'
                  target_branch: main

            - name: Merge PR
              env:
                  GH_TOKEN: ${{ secrets.PAT }}
              run: |
                  gh api \
                  --method PUT \
                  -H "Accept: application/vnd.github+json" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/pulls/${{ steps.pr.outputs.pr_number }}/merge \
                   -f "${{format('commit_title=chore{0}release{1}{2} {3}', '(', ')', ':', needs.semantic-release.outputs.new_release_version) }} [skip ci]" -f "${{format('commit_message=chore{0}release{1}{2} {3}', '(', ')', ':', needs.semantic-release.outputs.new_release_version) }} [skip ci]"
